---
import GitHub from "./icons/GitHub.astro"
import LinkButton from "./LinkButton.astro"

const TAGScleanwave = [
  {
    name: "Node.js",
    class: "bg-green-500/20 text-green-100"
  },
  {
    name: "Express",
    class: "bg-gray-400/20 text-gray-100"
  },
    {
    name: "HTML",
    class: "bg-orange-500/20 text-orange-200"
  },
    {
    name: "CSS",
    class: "bg-sky-500/20 text-sky-100"
  },
    {
    name: "JavaScript",
    class: "bg-yellow-400/20 text-yellow-100"
  },
    {
    name: "MySql",
    class: "bg-sky-500/20 text-sky-100"
  },
    {
    name: "Sequelize",
    class: "bg-sky-500/20 text-sky-100"
  },
    {
    name: "React",
    class: "bg-cyan-500/20 text-cyan-100"
  },
]

const TAGSwordle = [
      {
    name: "React",
    class: "bg-cyan-500/20 text-cyan-100"
  },    {
    name: "Vite",
    class: "bg-purple-500/20 text-purple-100"
  },    {
    name: "JavaScript",
    class: "bg-yellow-400/20 text-yellow-100"
  },
]

const cleanwave =   {
    spanishTitle: "CleanWave - Ecommerce con venta al por mayor y al por menor",
    englishTiTle: 'CleanWave - Ecommerce with wholesale and retail sales',
    spanishDescription:
      "Ecommerce que ofrece productos de limpieza a clientes mayoristas y consumidores finales, haciendo una diferenciación en interfaz, precios y ofertas según el tipo de usuario.",
    englishDescription: "E-commerce that offers cleaning products to wholesale clients and end consumers, making a differentiation in interface, prices, and offers according to the type of user.",
    link: "https://cleanwave-ecommerce-production.up.railway.app/consumidorfinal",
    github: "https://github.com/ManuelMarienhoff/CleanWave---Ecommerce",
    image: "/projects/cleanWave.webp",
    tags: TAGScleanwave,
  }

const PROJECTS = [

  {
    spanishTitle: "Clon de Wordle",
    englishTiTle: "Wordle Clone",
    spanishDescription:
      "Replica del juego Wordle desarrollado con React. ¿Puedes adivinar a palabra?",
    englishDescription: "Wordle clone made with React. ¿Can you guess the word?",
    link: "https://mywordguesser.netlify.app/",
    github: "https://github.com/ManuelMarienhoff/myWordGuesser",
    image: "/projects/wordle.png",
    tags: TAGSwordle,
  }
]
---
<section class="flex flex-col gap-y-16">
  <article>
    <h3 class="text-2xl font-semibold text-yellow-400 dark:text-yellow-200 mb-2"><span class="spanish">{cleanwave.spanishTitle}</span><span class="english hidden">{cleanwave.englishTiTle}</span>
    </h3>
    <p class="text-lg mb-4 text-white/85 text-pretty"><span class="spanish">{cleanwave.spanishDescription}</span><span class="english hidden">{cleanwave.englishDescription}</span></p>
    <div class="mt-2 inline-flex flex-wrap gap-1 ">
      {cleanwave.tags.map((tag) => (
          <span class={`text-xs mb-2 p-1 rounded-md ${tag.class}`}>{tag.name}</span>
      ))}
  </div>
  <img
          loading="lazy"
          class="rounded shadow-2xl shadow-white/10 aspect-video"
          src={cleanwave.image}
          alt={`Captura de pantalla del proyecto ${cleanwave.image}`}
        />
        <footer class="flex gap-x-4 items-end justify-start mt-4 text-white">
          {cleanwave.github && (
            <LinkButton href={cleanwave.github}>
              <GitHub class="size-6" />
              <span class="spanish">
              Ver código fuente</span><span class="english hidden">View Code</span>
            </LinkButton>
          )}
          </footer>
  </article>


  
  {
    PROJECTS.map(({ image, spanishTitle, englishTiTle, spanishDescription,englishDescription, tags, link, github }) => (
      <article>
        <h3 class="text-2xl font-semibold text-yellow-400 dark:text-yellow-200 mb-2"><span class="spanish">{spanishTitle}</span><span class="english hidden">{englishTiTle}</span>
          
        </h3>
        <p class="text-lg mb-4 text-white/85 text-pretty"><span class="spanish">{spanishDescription}</span><span class="english hidden">{englishDescription}</span></p>
        <div class="mt-2 inline-flex flex-wrap gap-1 ">
            {tags.map((tag) => (
                <span class={`text-xs mb-2 p-1 rounded-md ${tag.class}`}>{tag.name}</span>
            ))}
        </div>
        <img
          loading="lazy"
          class="rounded shadow-2xl shadow-white/10 aspect-video"
          src={image}
          alt={`Captura de pantalla del proyecto ${image}`}
        />
        <footer class="flex gap-x-4 items-end justify-start mt-4 text-white">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              <span class="spanish">
              Ver código fuente</span><span class="english hidden">View Code</span>
            </LinkButton>
          )}
          <LinkButton target="_blank" href={link}>
            <svg
              width="24"
              height="24"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              fill="none"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <>
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M19.5 7a9 9 0 0 0 -7.5 -4a8.991 8.991 0 0 0 -7.484 4" />
                <path d="M11.5 3a16.989 16.989 0 0 0 -1.826 4" />
                <path d="M12.5 3a16.989 16.989 0 0 1 1.828 4" />
                <path d="M19.5 17a9 9 0 0 1 -7.5 4a8.991 8.991 0 0 1 -7.484 -4" />
                <path d="M11.5 21a16.989 16.989 0 0 1 -1.826 -4" />
                <path d="M12.5 21a16.989 16.989 0 0 0 1.828 -4" />
                <path d="M2 10l1 4l1.5 -4l1.5 4l1 -4" />
                <path d="M17 10l1 4l1.5 -4l1.5 4l1 -4" />
                <path d="M9.5 10l1 4l1.5 -4l1.5 4l1 -4" />
              </>
            </svg>
            <span class="spanish">
            Ir al sitio web</span><span class="english hidden">Live Preview</span>
          </LinkButton>
        </footer>
      </article>
    ))
  }
</section>
